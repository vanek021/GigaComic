@using GigaComic.Shared.Responses.Comic

<EditForm OnValidSubmit="OnContinue" Model="ComicResponseModel">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h2 class="content__title">
        Отлично! Мы собрали для вас истории по вашим тезисам.
        <br />
        Вы можете отредактировать их:
    </h2>

    <div class="comic-container">
        @foreach (var cAbstract in ComicResponseModel!.OrderedActiveAbstracts)
        {
            <CreateStory Abstract="cAbstract" />
        }

        @if (!string.IsNullOrEmpty(_error))
        {
            <div class="validation-message">@_error</div>
        }

        <div class="story__actions">
            @* <Button Class="button --default-button" Type="button">Добавить тезис</Button> *@
            <ButtonWithLoader Type="submit"
                              Text="Продолжить"
                              Color="ButtonWithLoader.BtnColor.Black" />
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public ComicResponse? ComicResponseModel { get; set; }

    [Parameter]
    public EventCallback OnContinueCallback { get; set; }

    private string? _error;

    private async Task OnContinue()
    {
        _error = null;

        if (ComicResponseModel!.OrderedActiveAbstracts.Any(x => x.IsActive && string.IsNullOrEmpty(x.Content)))
        {
            _error = "Все тезисы должны быть заполнены контентом";
            return;
        }

        await OnContinueCallback.InvokeAsync();
    }
}
