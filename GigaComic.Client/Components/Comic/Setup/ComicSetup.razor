@using GigaComic.Models.Enums
@using GigaComic.Shared.Requests.Comic
@using GigaComic.Shared.Responses.Comic

<EditForm OnValidSubmit="OnContinue" Model="ComicResponseModel">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <h2 class="content__title">
        Почти все готово. Давайте настроим ваш комикс:
    </h2>

    <div class="comic-container">
        <div class="comic-container__setup">
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Стиль</label>
                <div class="col-sm-8">
                    <EnumSelect TEnum="ComicStyle" @bind-Value="ComicSetupRequestModel.Style" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Расположение текста</label>
                <div class="col-sm-8">
                    <EnumSelect TEnum="ComicLabel" @bind-Value="ComicSetupRequestModel.Label" />
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-4 col-form-label">Сетка</label>
                <div class="col-sm-8">
                    <EnumSelect TEnum="ComicGrid" @bind-Value="ComicSetupRequestModel.Grid" />
                </div>
            </div>
        </div>
    </div>

    <div class="story__actions">
        <ButtonWithLoader Type="submit"
                          Text="Продолжить"
                          Width="148"
                          Height="48"
                          @ref="_btn" />
    </div>

</EditForm>

@* <ComicSteps CurrentStep="2" /> *@

@code {
    [Parameter]
    public ComicResponse? ComicResponseModel { get; set; }

    [Parameter]
    public ComicSetupRequest ComicSetupRequestModel { get; set; }

    [Parameter]
    public EventCallback OnContinueCallback { get; set; }

    private ButtonWithLoader? _btn;

    private async Task OnContinue()
    {
        _btn!.MarkAsLoading();
        await OnContinueCallback.InvokeAsync();
        _btn!.MarkAsLoading();
    }
}
